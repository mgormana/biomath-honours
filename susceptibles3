library(expm)
library(ggplot2)
library(tidyverse)
library(reshape2)


a1 = 0.02
a2 = 0.5
a3 = 0.9
e = 2/5
d = 2/(22 - (1/e))
b = 0.975
g = 0.061

#probability of being in states
pLa = 0.043
pIa = 0.039
pU1a = 0.069
pU2a = 0.01

pLb = 0.044
pIb = 0.04
pU1b = 0.084
pU2b = 0.011

pLc = 0.046
pIc = 0.042
pU1c = 0.096
pU2c = 0.012

t1 = seq(0,2, by = 0.1)
t2 = seq(0,5, by=0.1)
t3 = seq(0,7, by = 0.1)

#transition matrix
V1 <- matrix(c(
  -e, 0, 0, 0, 0, 0, 0, 0, 0, 
  e, -e, 0, 0, 0, 0, 0, 0, 0, 
  0, a1*e, -d, 0, 0, 0, 0, 0, 0, 
  0, 0, d, -d, b*d, 0, 0, 0, 0, 
  0, (1-a1)*e, 0, 0, -d, 0, 0, 0, 0, 
  0, 0, 0, 0, (1-b)*d, -d, 0, 0, 0, 
  0, 0, 0, (1-g)*d, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, d, 0, 0, 0, 
  0, 0, 0, g*d, 0, 0, 0, 0, 0), 
  nrow = 9, ncol = 9, byrow = TRUE)

V2 <- matrix(c(
  -e, 0, 0, 0, 0, 0, 0, 0, 0, 
  e, -e, 0, 0, 0, 0, 0, 0, 0, 
  0, a2*e, -d, 0, 0, 0, 0, 0, 0, 
  0, 0, d, -d, b*d, 0, 0, 0, 0, 
  0, (1-a2)*e, 0, 0, -d, 0, 0, 0, 0, 
  0, 0, 0, 0, (1-b)*d, -d, 0, 0, 0, 
  0, 0, 0, (1-g)*d, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, d, 0, 0, 0, 
  0, 0, 0, g*d, 0, 0, 0, 0, 0), 
  nrow = 9, ncol = 9, byrow = TRUE)

V3 <- matrix(c(
  -e, 0, 0, 0, 0, 0, 0, 0, 0, 
  e, -e, 0, 0, 0, 0, 0, 0, 0, 
  0, a3*e, -d, 0, 0, 0, 0, 0, 0, 
  0, 0, d, -d, b*d, 0, 0, 0, 0, 
  0, (1-a3)*e, 0, 0, -d, 0, 0, 0, 0, 
  0, 0, 0, 0, (1-b)*d, -d, 0, 0, 0, 
  0, 0, 0, (1-g)*d, 0, 0, 0, 0, 0, 
  0, 0, 0, 0, 0, d, 0, 0, 0, 
  0, 0, 0, g*d, 0, 0, 0, 0, 0), 
  nrow = 9, ncol = 9, byrow = TRUE)

undetProbA = matrix(c(pLa, pIa, 0, 0, pU1a, pU2a, 0, 0, 0), ncol=1, byrow = FALSE)
undetProbB = matrix(c(pLb, pIb, 0, 0, pU1b, pU2b, 0, 0, 0), ncol=1, byrow = FALSE)
undetProbC = matrix(c(pLc, pIc, 0, 0, pU1c, pU2c, 0, 0, 0), ncol=1, byrow = FALSE)

infectiousUndetected = matrix(c(1, 1, 0, 0, 1, 1, 0, 0, 0), nrow = 1, byrow = TRUE)

#byDay2
IUProbFuncA = function(t) {infectiousUndetected%*%expm(V1*t)%*%undetProbA}
IUProbFuncB = function(t) {infectiousUndetected%*%expm(V1*t)%*%undetProbB}
IUProbFuncC = function(t) {infectiousUndetected%*%expm(V1*t)%*%undetProbC}

t = seq(0,30, by = 1)
ProbA = as.data.frame(sapply(t, IUProbFuncA))
ProbB = as.data.frame(sapply(t, IUProbFuncB))
ProbC = as.data.frame(sapply(t, IUProbFuncC))

Prob1 = as.data.frame(t)

Prob1 = cbind(Prob1, ProbA, ProbB, ProbC) %>% 
  filter(t == 2) %>% 
  rename(time = t,
         weeklyTesting = "sapply(t, IUProbFuncA)", 
         restrictedTesting = "sapply(t, IUProbFuncB)",
         borderHealthCheck = "sapply(t, IUProbFuncC)") %>% 
  melt(id = "time") %>% 
  select(-time) %>% 
  rename(NPI = variable, byDay2 = value)

#byDay5
IUProbFuncA = function(t) {infectiousUndetected%*%expm(V2*t2)%*%undetProbA}
IUProbFuncB = function(t) {infectiousUndetected%*%expm(V2*t2)%*%undetProbB}
IUProbFuncC = function(t) {infectiousUndetected%*%expm(V2*t2)%*%undetProbC}

ProbA = as.data.frame(sapply(t, IUProbFuncA))
ProbB = as.data.frame(sapply(t, IUProbFuncB))
ProbC = as.data.frame(sapply(t, IUProbFuncC))

Prob2 = as.data.frame(t)

Prob2 = cbind(Prob2, ProbA, ProbB, ProbC) %>% 
  filter(t == 5) %>% 
  rename(time = t,
         weeklyTesting = "sapply(t, IUProbFuncA)", 
         restrictedTesting = "sapply(t, IUProbFuncB)",
         borderHealthCheck = "sapply(t, IUProbFuncC)") %>% 
  melt(id = "time") %>% 
  select(-time) %>% 
  rename(NPI = variable, byDay5 = value)

#afterDay5
IUProbFuncA = function(t) {infectiousUndetected%*%expm(V3*t3)%*%undetProbA}
IUProbFuncB = function(t) {infectiousUndetected%*%expm(V3*t3)%*%undetProbB}
IUProbFuncC = function(t) {infectiousUndetected%*%expm(V3*t3)%*%undetProbC}

ProbA = as.data.frame(sapply(t, IUProbFuncA))
ProbB = as.data.frame(sapply(t, IUProbFuncB))
ProbC = as.data.frame(sapply(t, IUProbFuncC))

Prob3 = as.data.frame(t)

Prob3 = cbind(Prob3, ProbA, ProbB, ProbC) %>% 
  filter(t == 5) %>% 
  rename(time = t,
         weeklyTesting = "sapply(t, IUProbFuncA)", 
         restrictedTesting = "sapply(t, IUProbFuncB)",
         borderHealthCheck = "sapply(t, IUProbFuncC)") %>% 
  melt(id = "time") %>% 
  select(-time) %>% 
  rename(NPI = variable, afterDay5 = value)

#merging testing options
ProbM = merge(Prob1, Prob2, by = "NPI")
ProbM = merge(ProbM, Prob3, by = "NPI") %>% 
  melt(id = "NPI") %>% 
  rename(testingStrategy = variable, ProbInfectiousUndetected = value)

ggplot(ProbM, aes(x=testingStrategy, y = ProbInfectiousUndetected, color = NPI, group = NPI)) + 
  geom_point(size =4) +
  geom_line() + 
  theme_minimal() + 
  scale_color_manual(values = c("#f00000","#ffc709", "slateblue4"),
                     name = "Case Detection Efforts Prior to Arrival",
                     labels = c("Weekly Asymptomatic Testing", "Border Health Check", "None")) +
  scale_x_discrete(name = "Day of Test", labels = c("Day 2", "Day 5", "Day 7")) + 
  scale_y_continuous(name = "P(Infectious and Undetected)", labels = label_percent(accuracy = 1)) + 
  theme(axis.text = element_text(size = 14), 
        axis.title =element_text(size = 18), 
        legend.title = element_text(size = 18),
        legend.text = element_text(size = 14),
        strip.text = element_text(size = 18))

